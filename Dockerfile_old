#Contrucción de la imagen
FROM alpine:latest as builder

ARG NGINX_VERSION=1.21.1
ARG NGINX_RTMP_VERSION=1.2.2

#Contrucción dependencias
RUN	apk update		&&	\
	apk add				\
		git			\
		gcc			\
		binutils		\
		gmp			\
		isl			\
		libgomp			\
		libatomic		\
		libgcc			\
		openssl			\
		pkgconf			\
		pkgconfig		\
		mpc1			\
		libstdc++		\
		ca-certificates		\
		libssh2			\
		curl			\
		expat			\
		pcre			\
		musl-dev		\
		libc-dev		\
		pcre-dev		\
		zlib-dev		\
		openssl-dev		\
		curl			\
		make

#Obtener nginx
RUN	cd /tmp/									&&	\
#remote-name guarda el nombre descargado de la parte de la ruta --> "https://example.com/streaming.jpg", se guardaria streaming.jpg
#especifica el directorio en el que deberían ser almacenados los archivos 
	curl --remote-name http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz			&&	\
	git clone https://github.com/arut/nginx-rtmp-module.git -b v${NGINX_RTMP_VERSION}
#Descomprimir nginx y configurarlo con el modulo
RUN	cd /tmp										&&	\
	tar xzf nginx-${NGINX_VERSION}.tar.gz						&&	\
	cd nginx-${NGINX_VERSION}							&&	\
	./configure										\
		--prefix=/opt/nginx								\
		#https								\
		--with-http_ssl_module								\
		--add-module=../nginx-rtmp-module					&&	\
	make										&&	\
	make install


FROM alpine:latest

ARG FFMPEG_VERSION=4.4
ARG PREFIX=/opt

#Dependencias ffmpeg
RUN     apk update              &&      \
        apk add                         \
		build-base \
		coreutils \
		freetype-dev \
		lame-dev \
		libogg-dev \
		libass \
		libass-dev \
		libvpx-dev \
		libvorbis-dev \
		libwebp-dev \
		libtheora-dev \
		openssl-dev \
		opus-dev \
		pkgconf \
		pkgconfig \
		rtmpdump-dev \
		x264-dev \
		x265-dev \
		yasm


#Obtener ffmpeg
RUN     cd /tmp/                                                                        &&      \
        curl --remote-name http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz                      &&      \
#Descomprimir ffmpeg
RUN	cd /tmp/                                                                        &&      \
	tar xzf ffmpeg-${FFMPEG_VERSION}.tar.gz && rm ffmpeg-${FFMPEG_VERSION}.tar.gz                      &&      \


RUN cd /tmp/ffmpeg-${FFMPEG_VERSION} && \
	./configure \
		--prefix=${PREFIX} \
		--enable-version3 \
		--enable-gpl \
		--enable-nonfree \
		--enable-small \
		--enable-libmp3lame \
		--enable-libx264 \
		--enable-libx265 \
		--enable-libvpx \
		--enable-libtheora \
		--enable-libvorbis \
		--enable-libopus \
		--enable-libfdk-aac \
		--enable-libass \
		--enable-libwebp \
		--enable-postproc \
		--enable-avresample \
		--enable-libfreetype \
		--enable-openssl \
		--disable-debug \
		--disable-doc \
		--disable-ffplay \
		--extra-libs="-lpthread -lm" && \
	make										&&	\
	make install									&&	\
	make distclean

FROM alpine:latest

RUN     apk update              &&      \
        apk add                         \

RUN apk add --update \
  ca-certificates \
  gettext \
  openssl \
  pcre \
  lame \
  libogg \
  curl \
  libass \
  libvpx \
  libvorbis \
  libwebp \
  libtheora \
  opus \
  rtmpdump \
  x264-dev \
  x265-dev

COPY --from=0 /opt/nginx /opt/nginx
COPY --from=0 /tmp/nginx-rtmp-module/stat.xsl /opt/nginx/conf/stat.xsl
COPY --from=build-ffmpeg /opt /opt
COPY --from=build-ffmpeg /lib/libfdk-aac.so.2 /lib/libfdk-aac.so.2

RUN rm /opt/nginx/conf/nginx.conf

EXPOSE 1935
EXPOSE 8080


